/* tslint:disable */
/* eslint-disable */
/**
 * The Platform API Connector Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImportOpenApiSpecificationRequestModel
 */
export interface ImportOpenApiSpecificationRequestModel {
    /**
     * The component name of an API Connector.
     * @type {string}
     * @memberof ImportOpenApiSpecificationRequestModel
     */
    name: string;
    /**
     * The icon of an API Connector.
     * @type {string}
     * @memberof ImportOpenApiSpecificationRequestModel
     */
    icon?: string;
    /**
     * The OpenAPI specification.
     * @type {string}
     * @memberof ImportOpenApiSpecificationRequestModel
     */
    specification: string;
}

/**
 * Check if a given object implements the ImportOpenApiSpecificationRequestModel interface.
 */
export function instanceOfImportOpenApiSpecificationRequestModel(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('specification' in value)) return false;
    return true;
}

export function ImportOpenApiSpecificationRequestModelFromJSON(json: any): ImportOpenApiSpecificationRequestModel {
    return ImportOpenApiSpecificationRequestModelFromJSONTyped(json, false);
}

export function ImportOpenApiSpecificationRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportOpenApiSpecificationRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'specification': json['specification'],
    };
}

export function ImportOpenApiSpecificationRequestModelToJSON(value?: ImportOpenApiSpecificationRequestModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'icon': value['icon'],
        'specification': value['specification'],
    };
}

